#!/bin/bash

# Cargar variables de entorno
if [ ! -f .env ]; then
    echo "‚ùå ERROR: Archivo .env no encontrado"
    echo "Copia .env.example a .env y configura tus credenciales"
    exit 1
fi

source .env

# Verificar que las variables est√°n configuradas
if [ -z "$API_KEY" ] || [ -z "$SFTP_HOST" ] || [ -z "$SFTP_PORT" ] || [ -z "$SFTP_USER" ] || [ -z "$SFTP_PASS" ] || [ -z "$BASE_DIR" ]; then
    echo "‚ùå ERROR: Variables de entorno no configuradas completamente"
    echo "Aseg√∫rate de configurar todas las variables en .env"
    exit 1
fi

BASEURL="http://localhost:8080"

echo "üß™ Iniciando smoke tests..."
echo "API Key: ${API_KEY:0:8}..."
echo "SFTP Host: $SFTP_HOST"
echo "Base URL: $BASEURL"

# Test 1: Health check (sin auth)
echo ""
echo "1Ô∏è‚É£ Test: Health check (sin auth)"
response=$(curl -s -w "%{http_code}" -o /tmp/health_response.json "$BASEURL/healthz")
if [ "$response" = "200" ]; then
    echo "‚úÖ Health check OK"
else
    echo "‚ùå Health check fall√≥: HTTP $response"
    cat /tmp/health_response.json
fi

# Test 2: Endpoint con API key inv√°lida
echo ""
echo "2Ô∏è‚É£ Test: API key inv√°lida"
response=$(curl -s -w "%{http_code}" -o /tmp/invalid_auth_response.json -H "X-API-Key: invalid-key" "$BASEURL/list")
if [ "$response" = "401" ]; then
    echo "‚úÖ Autenticaci√≥n funciona correctamente"
else
    echo "‚ùå Autenticaci√≥n fall√≥: HTTP $response"
    cat /tmp/invalid_auth_response.json
fi

# Test 3: Path traversal
echo ""
echo "3Ô∏è‚É£ Test: Path traversal (debe fallar)"
response=$(curl -s -w "%{http_code}" -o /tmp/traversal_response.json -H "X-API-Key: $API_KEY" "$BASEURL/list?path=../../../etc/passwd")
if [ "$response" = "400" ]; then
    echo "‚úÖ Path traversal bloqueado correctamente"
else
    echo "‚ùå Path traversal no fue bloqueado: HTTP $response"
    cat /tmp/traversal_response.json
fi

# Test 4: Listar directorio (con auth v√°lida)
echo ""
echo "4Ô∏è‚É£ Test: Listar directorio (con auth v√°lida)"
response=$(curl -s -w "%{http_code}" -o /tmp/list_response.json -H "X-API-Key: $API_KEY" "$BASEURL/list?path=/")
if [ "$response" = "200" ]; then
    echo "‚úÖ Listar directorio OK"
    echo "Contenido:"
    cat /tmp/list_response.json | head -5
else
    echo "‚ùå Listar directorio fall√≥: HTTP $response"
    cat /tmp/list_response.json
fi

echo ""
echo "üß™ Smoke tests completados"
